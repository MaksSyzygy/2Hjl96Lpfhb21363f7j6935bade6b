@model BankApplication.Models.ViewModels.Pages.PageVM

@{
    ViewBag.Title = "Новая страница";
}

<h3>Создать страницу</h3>

@if (TempData["OK"] != null)
{
    <div class="alert alert-success">
        @TempData["OK"]
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                @Html.ValidationMessage("titleExist", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                @Html.ValidationMessage("descrExist", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PageCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.categoryList.Count() <= 0)
                {
                    @Html.ActionLink("Создать категорию страницы", "CreateCategory", "", new { @class = "btn btn-success" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.PageCategoryId, Model.categoryList, "Категория страницы", new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.PageCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sidebar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Sidebar)
                    @Html.ValidationMessageFor(model => model.Sidebar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-success" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("К страницам", "Index", "", new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
}

@section Scripts
{
    <script>
        CKEDITOR.replace("Body")
    </script>
}